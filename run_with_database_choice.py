#!/usr/bin/env python3
"""
ุณูุฑูุจุช ุชุดุบูู ุงูุจูุช ูุน ุฏุนู ุงุฎุชูุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
"""

import os
import sys
import argparse
from dotenv import load_dotenv

def load_environment(database_type=None):
    """ุชุญููู ุงูุฅุนุฏุงุฏุงุช ุงูุจูุฆูุฉ"""
    # ุชุญููู ููู .env
    load_dotenv()
    
    # ุชุญุฏูุฏ ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช
    if database_type:
        os.environ['DATABASE_TYPE'] = database_type
        print(f"๐๏ธ ุชู ุชุญุฏูุฏ ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช: {database_type}")
    
    # ุงูุชุญูู ูู ุงูุฅุนุฏุงุฏุงุช ุงููุทููุจุฉ
    required_vars = ['BOT_TOKEN', 'API_ID', 'API_HASH']
    missing_vars = []
    
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        print(f"โ ูุชุบูุฑุงุช ุจูุฆูุฉ ููููุฏุฉ: {', '.join(missing_vars)}")
        print("ูุฑุฌู ุชุญุฏูุซ ููู .env")
        return False
    
    return True

def test_database_connection():
    """ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    print("\n๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...")
    
    try:
        from database import DatabaseFactory
        
        # ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
        result = DatabaseFactory.test_connection()
        
        if result['success']:
            print(f"โ {result['message']}")
            return True
        else:
            print(f"โ {result['message']}")
            return False
            
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุงูุงุชุตุงู: {e}")
        return False

def show_database_info():
    """ุนุฑุถ ูุนูููุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    try:
        from database import DatabaseFactory
        
        db_info = DatabaseFactory.get_database_info()
        
        print(f"\n๐ ูุนูููุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช:")
        print(f"โข ุงูููุน: {db_info['name']}")
        print(f"โข ุงููุนุฑู: {db_info['type']}")
        
        if db_info['connection_string']:
            print(f"โข ุฑุงุจุท ุงูุงุชุตุงู: {db_info['connection_string']}")
        if db_info['file_path']:
            print(f"โข ูุณุงุฑ ุงูููู: {db_info['file_path']}")
            
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุนุฑุถ ูุนูููุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")

def run_bot():
    """ุชุดุบูู ุงูุจูุช"""
    print("\n๐ ุชุดุบูู ุงูุจูุช...")
    
    try:
        from bot_package.bot_simple import SimpleTelegramBot
        from bot_package.config import BOT_TOKEN, API_ID, API_HASH
        
        # ุฅูุดุงุก ุงูุจูุช
        bot = SimpleTelegramBot()
        
        # ุชุดุบูู ุงูุจูุช
        import asyncio
        asyncio.run(bot.run())
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุชุดุบูู ุงูุจูุช: {e}")
        return False
    
    return True

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    parser = argparse.ArgumentParser(description='ุชุดุบูู ุงูุจูุช ูุน ุฏุนู ุงุฎุชูุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช')
    parser.add_argument('--database', '-d', 
                       choices=['sqlite', 'postgresql'], 
                       help='ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช (sqlite ุฃู postgresql)')
    parser.add_argument('--test', '-t', 
                       action='store_true', 
                       help='ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ููุท')
    parser.add_argument('--info', '-i', 
                       action='store_true', 
                       help='ุนุฑุถ ูุนูููุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช')
    
    args = parser.parse_args()
    
    print("๐ค ุชุดุบูู ุงูุจูุช ูุน ุฏุนู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
    print("=" * 50)
    
    # ุชุญููู ุงูุฅุนุฏุงุฏุงุช ุงูุจูุฆูุฉ
    if not load_environment(args.database):
        sys.exit(1)
    
    # ุนุฑุถ ูุนูููุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
    show_database_info()
    
    # ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
    if args.test:
        if test_database_connection():
            print("\nโ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูุงุฌุญ!")
        else:
            print("\nโ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูุดู!")
        return
    
    # ุนุฑุถ ุงููุนูููุงุช ููุท
    if args.info:
        return
    
    # ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูุจู ุงูุชุดุบูู
    if not test_database_connection():
        print("\nโ ูุดู ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช")
        print("ูุฑุฌู ุงูุชุญูู ูู ุงูุฅุนุฏุงุฏุงุช")
        sys.exit(1)
    
    # ุชุดุบูู ุงูุจูุช
    if not run_bot():
        sys.exit(1)

if __name__ == "__main__":
    main()