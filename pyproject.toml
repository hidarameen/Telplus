[build-system]
requires = ["setuptools>=69.0.0", "wheel>=0.42.0"]
build-backend = "setuptools.build_meta"

[project]
name = "enhanced-telegram-bot"
dynamic = ["version"]
description = "بوت Telegram محسن مع وظائف متقدمة للعلامة المائية ومعالجة الوسائط"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Enhanced Bot Team", email = "team@your-domain.com"}
]
maintainers = [
    {name = "Enhanced Bot Team", email = "maintainers@your-domain.com"}
]
keywords = [
    "telegram", "bot", "watermark", "media", "processing",
    "enhanced", "optimization", "ffmpeg", "opencv", "pillow",
    "async", "telethon", "python", "arabic", "enhanced-bot"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Multimedia :: Video",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "deep-translator>=1.11.4",
    "flask>=3.1.1",
    "numpy>=2.2.6",
    "opencv-python>=4.12.0.88",
    "psycopg2-binary>=2.9.10",
    "telegram>=0.0.1",
    "python-telegram-bot==20.8",
    "telethon==1.36.0",
    "SQLAlchemy==2.0.34",
    "Pillow==10.4.0",
    "asyncio-mqtt==0.16.2",
    "aiofiles==24.1.0",
    "requests==2.32.3",
    "python-dotenv==1.0.1",
    "cryptography==43.0.1",
    "langdetect==1.0.9",
    "emoji==2.12.1",
    "pytz==2024.2",
    "colorlog==6.8.2",
    "ffmpeg-python>=0.2.0",
    "aiohttp>=3.9.0",
    "asyncpg==0.29.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.6.0",
    "pytest-html>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "autopep8>=2.0.0",
    "yapf>=0.40.0",
    "flake8>=7.0.0",
    "pylint>=3.1.0",
    "mypy>=1.8.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pre-commit>=3.6.0",
    "commitizen>=3.20.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
    "ipython>=8.20.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "ipdb>=0.13.0",
    "debugpy>=1.8.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
    "py-spy>=0.3.0",
    "psutil>=5.9.0",
    "radon>=6.0.0",
    "mccabe>=0.7.0",
    "coverage>=7.4.0",
    "diff-cover>=8.0.0",
    "gitpython>=3.1.0",
    "gitdb>=4.0.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "tqdm>=4.66.0",
    "colorama>=0.4.0",
    "termcolor>=2.3.0",
    "environs>=10.0.0",
    "loguru>=0.7.0",
    "structlog>=24.1.0",
    "pyyaml>=6.0.1",
    "toml>=0.10.2",
    "configparser>=6.0.0",
    "pip-audit>=2.6.0",
    "twine>=4.0.0",
    "build>=1.0.0",
    "tox>=4.11.0",
    "nox>=2023.4.22",
    "codacy-coverage>=1.3.0",
    "codecov>=3.0.0",
    "watchdog>=3.0.0",
    "livereload>=2.6.0",
    "bpython>=0.24.0",
    "ptpython>=3.0.0",
    "alembic>=1.13.0",
    "sqlalchemy-utils>=0.41.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "httpx>=0.25.0",
    "requests-mock>=1.11.0",
    "scikit-image>=0.22.0",
    "pycryptodome>=3.19.0",
    "aiohttp>=3.9.0",
    "websockets>=12.0",
    "redis>=5.0.0",
    "pymongo>=4.6.0",
    "elasticsearch>=8.11.0",
    "prometheus-client>=0.19.0",
    "statsd>=4.0.0",
    "datadog>=0.44.0",
    "docker-compose>=1.29.0",
    "docker>=6.1.0",
    "kubectl>=1.28.0",
    "faker>=20.1.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.2.0",
    "responses>=0.24.0",
]
test = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/your-repo/enhanced-telegram-bot"
Documentation = "https://github.com/your-repo/enhanced-telegram-bot#readme"
Repository = "https://github.com/your-repo/enhanced-telegram-bot"
"Bug Tracker" = "https://github.com/your-repo/enhanced-telegram-bot/issues"
Changelog = "https://github.com/your-repo/enhanced-telegram-bot/blob/main/CHANGELOG.md"
"Source Code" = "https://github.com/your-repo/enhanced-telegram-bot"

[project.scripts]
enhanced-bot = "main:main"
bot-health-check = "health_check:main"

[tool.setuptools.dynamic]
version = {file = "VERSION"}

[tool.setuptools.packages.find]
include = ["*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.toml", "*.sh", "Dockerfile", "LICENSE", "VERSION"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["enhanced_telegram_bot"]
known_third_party = ["telethon", "opencv", "PIL", "numpy", "flask"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/build/*",
    "*/dist/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.bandit]
exclude_dirs = ["tests", "docs", "scripts"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
